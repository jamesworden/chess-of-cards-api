AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for chess-of-cards-api

# 1. New Parameter for Environment
Parameters:
  Environment:
    Type: String
    Default: dev # Set a default for convenience
    AllowedValues:
      - dev
      - prod
    Description: Environment name (e.g., dev or prod)

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 100

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  NetCodeWebAPIServerless:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Description: A simple example includes a .NET Core WebAPI App with
        DynamoDB table.
      CodeUri: ./src/ServerlessAPI/
      Handler: ServerlessAPI
      Runtime: dotnet8
      MemorySize: 1024
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          # Pass the DynamoDB Table Name (which will now be environment specific)
          SAMPLE_TABLE: !Ref GameTable
          # Optionally pass the environment name itself
          ENVIRONMENT_NAME: !Ref Environment
      Policies:
        # Give Create/Read/Update/Delete Permissions to the GameTable
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        ProxyResource:
          Type: HttpApi
          Properties:
            PayloadFormatVersion: "2.0"
            Path: /{proxy+}
            Method: ANY
        RootResource:
          PayloadFormatVersion: "2.0"
          Type: HttpApi
          Properties:
            Path: /
            Method: ANY

  # DynamoDB table to store item: {id: <ID>, name: <NAME>}
  GameTable:
    Type: AWS::Serverless::GameTable
    Properties:
      # 2. Update the TableName to include the Environment parameter
      TableName: !Sub "chess-of-cards-api-game-${Environment}"
      PrimaryKey:
        Name: GameId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        # 3. Update ApplicationInsights name to include the Environment parameter
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}-${Environment}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"

Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
