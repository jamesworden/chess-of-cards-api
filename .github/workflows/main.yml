name: .NET 8 SAM Multi-Environment Deployment

# Trigger the workflow on push to 'main' or 'develop'
on:
  push:
    branches:
      - main
      - develop # Added the develop branch for DEV deployment
  workflow_dispatch: # Allows manual trigger

jobs:
  # 1. BUILD JOB: Runs on all pushes to create the reusable SAM package
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install SAM CLI
        run: pip install aws-sam-cli

      - name: SAM Build
        # FIX APPLIED: Added '--mount-with WRITE' to prevent the interactive prompt error in CI
        run: sam build --use-container --mount-with WRITE

      # Upload the built artifacts so they can be used by the deploy jobs
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sam-build-artifacts
          path: .aws-sam/build/ # Standard SAM build output path

  # 2. DEV DEPLOYMENT JOB: Runs only when pushing to 'develop'
  deploy_dev:
    needs: build # Must succeed after the build job
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' # Conditional execution

    # Links to the 'dev' environment
    environment: dev

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: sam-build-artifacts

      # Configure AWS credentials for the DEV IAM User/Role
      - name: Configure AWS Credentials (Dev)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Assumes you have Dev keys configured as secrets in the 'dev' environment
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # <-- ACTION NEEDED: Confirm this is your target AWS region

      - name: SAM Deploy to Development
        run: |
          sam deploy \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --stack-name ChessOfCardsApi-Dev \
            --s3-bucket chess-of-cards-api-artifacts \
            --capabilities CAPABILITY_IAM

  # 3. PRODUCTION DEPLOYMENT JOB: Runs only when pushing to 'main'
  deploy_prod:
    needs: build # Must succeed after the build job
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Conditional execution

    # CRITICAL: Links to the 'production' environment (with all its required security gates)
    environment: prod

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: sam-build-artifacts

      # Configure AWS credentials for the PROD IAM User/Role
      - name: Configure AWS Credentials (Prod)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Assumes you have Prod keys configured as secrets in the 'production' environment
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # <-- ACTION NEEDED: Confirm this is your target AWS region

      - name: SAM Deploy to Production
        run: |
          sam deploy \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --stack-name ChessOfCardsApi-Prod \
            --s3-bucket chess-of-cards-api-artifacts \
            --capabilities CAPABILITY_IAM
